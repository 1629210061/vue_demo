<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hwh.vue_demo.mapper.UserMapper" >
  <resultMap id="UserResultMap" type="com.hwh.vue_demo.entity.User" >
    <id column="Id" property="id" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="VARCHAR" />
    <result column="mg_state" property="mgState" jdbcType="INTEGER" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    Id, user_name, mobile, type, email, create_time, mg_state, role_name
  </sql>

  <!--查询所有用户信息-->
  <select id="selectAll" resultMap="UserResultMap">
    select * from users
  </select>

  <!--分页查询用户信息-->
  <select id="selectPage" resultMap="UserResultMap">
    select * from users
    <if test="keyWord!=''">
      where user_name like #{keyWord} or mobile like #{keyWord} or email like #{keyWord} or role_name like #{keyWord}
    </if>
  </select>

  <!--根据关键字id查询-->
  <select id="selectById" resultMap="UserResultMap">
    select * from users where id = #{id}
  </select>

  <!--根据用户名查询-->
  <select id="selectByUsername" resultMap="UserResultMap" >
    select 
    <include refid="Base_Column_List" />
    from users
    where user_name = #{userName,jdbcType=INTEGER}
  </select>

   <!--根据id删除用户信息-->
  <delete id="deleteById" >
    delete from users
    where Id = #{id,jdbcType=INTEGER}
  </delete>


  <insert id="insert" parameterType="com.hwh.vue_demo.entity.User" >
    insert into users (Id, user_name, mobile, 
      type, email, create_time, 
      mg_state, role_name)
    values (#{id,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{mgState,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR})
  </insert>

  <!--添加用户-->
  <insert id="insertUserSelective" parameterType="com.hwh.vue_demo.entity.User" >
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        Id,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="mgState != null" >
        mg_state,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="mgState != null" >
        #{mgState,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByIdSelective" parameterType="com.hwh.vue_demo.entity.User" >
    update users
    <set >
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="mgState != null" >
        mg_state = #{mgState,jdbcType=INTEGER},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
    </set>
    where Id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hwh.vue_demo.entity.User" >
    update users
    set user_name = #{userName,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      mg_state = #{mgState,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR}
    where Id = #{id,jdbcType=INTEGER}
  </update>
</mapper>